package com.sgcc.pda.framelibrary.utils;

import com.sgcc.pda.framelibrary.protocol698.Frame698;
import com.sgcc.pda.framelibrary.securityunit.DataUnit;
import com.sgcc.pda.framelibrary.securityunit.SecurityUnitFrame;
import com.sgcc.pda.framelibrary.securityunit.format.Cammand;
import com.sgcc.pda.framelibrary.securityunit.format.SafeUnit2Manager;
import com.sgcc.pda.framelibrary.securityunit.format.SecurityUnitFrameFormat;
import com.sun.jna.NativeLong;
import com.sun.jna.Structure;
import com.sun.jna.WString;
import com.sun.jna.platform.win32.WinGDI;
import org.jf.util.BitSetUtils;
import org.jf.util.SparseIntArray;
import org.jf.util.StringUtils;
import sun.security.util.BitArray;

import javax.swing.plaf.synth.Region;
import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.BitSet;
import java.util.List;

import static com.sgcc.pda.framelibrary.protocol698.Frame698.ADDRESS_TYPE_BROADCAST;
import static com.sgcc.pda.framelibrary.protocol698.Frame698.ADDRESS_TYPE_GROUP;
import static com.sgcc.pda.framelibrary.protocol698.Frame698.ADDRESS_TYPE_MATCH;
import static com.sgcc.pda.framelibrary.protocol698.Frame698.ADDRESS_TYPE_SINGLE;
import static com.sgcc.pda.framelibrary.protocol698.Frame698.REGEX_MATCH;
import static com.sgcc.pda.framelibrary.protocol698.Frame698.REGEX_SINGLE_GROUP;

/**
 * Created by qinling on 2018/9/20 16:05
 * Description:
 */
public class StringToHex {

    public static class CompanyStruct extends Structure{
        public int id = 0;
        public String name = "123";
        public UserStruct userStruct = new UserStruct();
        @Override
        protected List getFieldOrder() {
            List a = new ArrayList();
            a.add("id");
            a.add("name");
            a.add("userStruct");
            return a;
        }
    }

    public static class UserStruct extends Structure{
        public int id = 1;
        public String name = "456";

        @Override
        protected List getFieldOrder() {
            List a = new ArrayList();
            a.add("id");
            a.add("name");

            return a;
        }
    }




    //504F533838383834  POS88884
    public static void main(String[] args) {
     //   System.out.println(Byte.parseByte("g",37));
    //    System.out.println(Byte.toUnsignedInt((byte) 0xff));
      //  System.out.println(Long.toUnsignedString(0XFFFFFFFFFFFFFFFFL));

        int a = 123456;
        System.out.println(a*(Math.pow(10,-2)));
        String data = "68 35 00 43 05 01 00 00 00 00 00 00 0F AF 05 03 00 50 04 02 00 01 20 21 02 00 1C 1C 07 E0 01 14 00 00 00 03 00 20 21 02 00 00 20 21 02 00 00 00 10 02 00 00 FD 5B 16";

        System.out.println(data.replaceAll(" ",""));

       /* String taskData = "010300290503035004020002202102001C07E301050000001C07E3010600000000020020210200000010020000616F5090#010300290503035004020002202102001C07E301040000001C07E3010500000000020020210200000010020000116CFBEE#010300290503035004020002202102001C07E301030000001C07E30104000000000200202102000000100200005617AE1D*010300290503035004020002202102001C07E301050000001C07E3010600000000020020210200000020020000A5049056#010300290503035004020002202102001C07E301040000001C07E30105000000000200202102000000200200008DF6E3CE#010300290503035004020002202102001C07E301030000001C07E3010400000000020020210200000020020000DC859AFB";
        //       // String[] tasks = a.split("\\*");
        //String[] taskDatas = tasks[0].split("#");
        String[] task =  taskData.split("\\*");
        for (int i = 0; i < task.length; i++) {
            String[] taskDatas =  task[i].split("#");
            for (int j = 0; j < taskDatas.length; j++) {
                //System.out.println(taskDatas[j]);


                System.out.println(getTimeFromTaskData(taskDatas[j]));
            }
        }*/
       /* BitSet bitSet2 = new BitSet();
        BitSet bitSet1 = BitSet.valueOf(new long[]{255});
        //WString
        Structure structure = new CompanyStruct() ;
        System.out.println(structure.toString());
        structure.writeField("name","structure.toString()");*/
       /* for (int i = 0; i <taskDatas.length ; i++) {
            System.out.println(taskDatas[i]);
        }*/

       /* for (int i = 0; i < 64; i++) {
            System.out.println(bitSet1.get(i));

        }*/
      //  System.out.println( Arrays.toString(bitSet1.get(0,3).toLongArray()));


       // BitArray bitArray = new BitArray(8,new byte[]{2});
       // System.out.println(bitArray.length());
       // System.out.println(bitArray.toString());

       // bitSet1.previousSetBit(2);
       // BitSet bitSet2 = BitSet.valueOf(a.getBytes());
      //  System.out.println(Arrays.toString(a.getBytes()));
       //   System.out.println(bitSet1.length());
     //   System.out.println(bitSet2.get(2));


     //   System.out.println(Arrays.toString(bitSet1.toLongArray()));

      /*  File temp = new File("D:/t11.txt");
        try {
            RandomAccessFile raf = new RandomAccessFile(temp, "rwd");
            //BitSet bitSet3 = BitSet.valueOf(Integer.toBinaryString(129).getBytes());

           // FileUtils.writeFileFromIS(temp, (InputStream) bitSet3.stream(), false);
            //raf.setLength(8);
            raf.writeByte((byte)-1);
            // raf.writeByte(129);
            // raf.writeByte(238);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }*/
/*
        SparseIntArray sparseIntArray = new SparseIntArray(12);
        // System.out.println(sparseIntArray.get(0));
        for (int i = 0; i < 12; i++) {
            sparseIntArray.put(i, i + 1);
        }
        for (int i = 0; i < 5; i++) {
            if (i % 2 == 0)
                sparseIntArray.removeAt(sparseIntArray.indexOfKey(i));
        }
        System.out.println(sparseIntArray.size());
        *//*  sparseIntArray.removeAt(sparseIntArray.indexOfKey(4));*//*
         *//*  for (int i = 0; i < sparseIntArray.size(); i++) {

        }*//*
        System.out.println(sparseIntArray.get(4, -1));*/
       /* for (int i = 0; i < sparseIntArray.size(); i++) {
            System.out.println(sparseIntArray.get(4,-1));
        }*/


        //33333333f854e35833333333f854e35833333333333337363434
        //3333333333333333333333333333333333333333333333333333
        /* e900050282016a805de6*/
        // System.out.println("ASCII : " + strToHex.convertHexToString(hex));
        //String safeUnit = "E9 00 22 01 05 85 9F 0C E1 5B EC 58 01 C2 16 95 F7 9B 7E 4C 22 D9 93 9B A0 50 29 A6 E8 0A B7 CF C5 DA B3 6C A9 52 E6";
        // String safeUnit = "E9 00 1B 00 0A 02 00 16 81 34 01 04 00 10 D5 B3 B8 F7 B5 6A 41 27 87 2E 8A 9A DA EC B1 75 73 E6 ";
        // String safeUnit = "2E72EAF8169336B14B7ED35A3CFB5F2F3BF645DBBAC233E3DC962251156A753E337B9D43CE8C45BDAEE47BC062BB892C1FB8BFAFDA8BE4C76C6AC5B10122474A76D49781E14E5D8D1BB83423090B685294C745D8D7D6349C75B05BB4DA725315E932BD6207891FAD2BC3806A7B8524305E182C011AC272A740E0D829B33DE32B81164889C11DA80EC7D20971F2480E32BB3FC7CBA5C09FAC74863AD2554A6621F81781B46F9A949DA6045B5571E12C98BF3C7B97F0C68B8FE3A09D97D4E08AFDF2A8A44C40B9AC4601A3CF39E3AA4DF9";
        // String safeUnit = "e90c4100810000bbbb021711015401000000000d33000000000000000000ffffffff31675f6c0000000000000000000000000000000000000000000000000000530200000000227b7fff90ffec1f000000000000000000000101223ba99c7d9a3e0a35f809cac79da9db4305d9020da184ca0200803600ff00000000008510000000f00000000000000005e0308205dc06092a864886f70d010702a08205cd308205c90201013100300b06092a864886f70d010701a08205af308202f230820296a00302010202103e0a35f809cac79da9db4305d9020da1300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3133303530333032323134315a170d3238303530333032323134315a308186310b300906035504061302434e310b300906035504080c02424a31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91311930170603550405131057543336334d413031455730343030393124302206035504030c1be4b8ade59bbde794b5e58a9be7a791e5ada6e7a094e7a9b6e999a231123010060a0992268993f22c6401010c0230333059301306072a8648ce3d020106082a811ccf5501822d03420004f4ecdc07283d8c831294b1a403a5ba7d546853593c23cd1b1895ef63c1855ebb05e8bc7fda86e34e8ace8bcfd8038a14648e166f6e5869708aca57e7c3239effa382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300b0603551d0f0404030206c0301d0603551d0e041604146cdf5f91c11ad8858adbeb68a8fda1e3f040345c30700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf55018375050003480030450221001dbd57101ad5ed9c6c36105ca8527d17eb3d41b2c73e0d94b7eb73cfd81371a502208f41f1c56933ee97e3fe57b4d0b6a5d6df20546bc92c8b980a7e26acdcfa2be6308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a100310005d6308205d206092a864886f70d010702a08205c3308205bf0201013100300b06092a864886f70d010701a08205a5308202e83082028ca003020102021060acc6d019e08fbf60d9223ba99c7d9a300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3137313231333038343033335a170d3332313231333038343033335a307d310b300906035504061302434e31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91310b300906035504080c02424a311930170603550405131035333032303030303030303032323762311b301906035504030c12e59bbde7bd91e8aea1e9878fe4b8ade5bf8331123010060a0992268993f22c6401010c0230343059301306072a8648ce3d020106082a811ccf5501822d0342000483b745b2ad9499d429f131f576ea579865a65959f3cc42a61b8c84ad0d95f613486f96fadb2fbc7c9fa6244ecb6b4e722be10b18117b7bd305795ad1479d645ea382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c301d0603551d0e0416041447daf0902970d0ac3a2ec5ba45c7c5e0f0047e9530700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300b0603551d0f0404030206c0300c06082a811ccf5501837505000348003045022009d475b8d261adb1c056131dc5b66d804167db0f3be10cc83752c476b2651ed9022100a826565597b96ca2d15f45ba4b0f9aba92d2a879dba85cb625b70d990a8f47ab308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a1003100dfe6";
        //String safeUnit = "e90c4100810000bbbb021711015401000000000d33000000000000000000ffffffff31675f6c0000000000000000000000000000000000000000000000000000530200000000227b7fff90ffec1f000000000000000000000101223ba99c7d9a3e0a35f809cac79da9db4305d9020da184ca0200803600ff00000000008510000000f00000000000000005e0308205dc06092a864886f70d010702a08205cd308205c90201013100300b06092a864886f70d010701a08205af308202f230820296a00302010202103e0a35f809cac79da9db4305d9020da1300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3133303530333032323134315a170d3238303530333032323134315a308186310b300906035504061302434e310b300906035504080c02424a31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91311930170603550405131057543336334d413031455730343030393124302206035504030c1be4b8ade59bbde794b5e58a9be7a791e5ada6e7a094e7a9b6e999a231123010060a0992268993f22c6401010c0230333059301306072a8648ce3d020106082a811ccf5501822d03420004f4ecdc07283d8c831294b1a403a5ba7d546853593c23cd1b1895ef63c1855ebb05e8bc7fda86e34e8ace8bcfd8038a14648e166f6e5869708aca57e7c3239effa382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300b0603551d0f0404030206c0301d0603551d0e041604146cdf5f91c11ad8858adbeb68a8fda1e3f040345c30700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf55018375050003480030450221001dbd57101ad5ed9c6c36105ca8527d17eb3d41b2c73e0d94b7eb73cfd81371a502208f41f1c56933ee97e3fe57b4d0b6a5d6df20546bc92c8b980a7e26acdcfa2be6308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a100310005d6308205d206092a864886f70d010702a08205c3308205bf0201013100300b06092a864886f70d010701a08205a5308202e83082028ca003020102021060acc6d019e08fbf60d9223ba99c7d9a300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3137313231333038343033335a170d3332313231333038343033335a307d310b300906035504061302434e31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91310b300906035504080c02424a311930170603550405131035333032303030303030303032323762311b301906035504030c12e59bbde7bd91e8aea1e9878fe4b8ade5bf8331123010060a0992268993f22c6401010c0230343059301306072a8648ce3d020106082a811ccf5501822d0342000483b745b2ad9499d429f131f576ea579865a65959f3cc42a61b8c84ad0d95f613486f96fadb2fbc7c9fa6244ecb6b4e722be10b18117b7bd305795ad1479d645ea382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c301d0603551d0e0416041447daf0902970d0ac3a2ec5ba45c7c5e0f0047e9530700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300b0603551d0f0404030206c0300c06082a811ccf5501837505000348003045022009d475b8d261adb1c056131dc5b66d804167db0f3be10cc83752c476b2651ed9022100a826565597b96ca2d15f45ba4b0f9aba92d2a879dba85cb625b70d990a8f47ab308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a1003100dfe6";
        //    format();
        // System.out.println("Hex : " + new SecurityUnitFrameFormat(safeUnit.replaceAll(" ","").trim()).format());
        //String string = "68520043052419100007660045DD050304601203000707E20B1A00000007E20B1B0000000300010301070566070010192405004001020000604002000060410200006042020001500402000100100200001CF216";


     /*   String string = "e90c4100810000bbbb021711015401000000000d33000000000000000000ffffffff31675f6c0000000000000000000000000000000000000000000000000000530200000000227b7fff90ffec1f000000000000000000000101223ba99c7d9a3e0a35f809cac79da9db4305d9020da184ca0200803600ff00000000008510000000f00000000000000005e0308205dc06092a864886f70d010702a08205cd308205c90201013100300b06092a864886f70d010701a08205af308202f230820296a00302010202103e0a35f809cac79da9db4305d9020da1300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3133303530333032323134315a170d3238303530333032323134315a308186310b300906035504061302434e310b300906035504080c02424a31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91311930170603550405131057543336334d413031455730343030393124302206035504030c1be4b8ade59bbde794b5e58a9be7a791e5ada6e7a094e7a9b6e999a231123010060a0992268993f22c6401010c0230333059301306072a8648ce3d020106082a811ccf5501822d03420004f4ecdc07283d8c831294b1a403a5ba7d546853593c23cd1b1895ef63c1855ebb05e8bc7fda86e34e8ace8bcfd8038a14648e166f6e5869708aca57e7c3239effa382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300b0603551d0f0404030206c0301d0603551d0e041604146cdf5f91c11ad8858adbeb68a8fda1e3f040345c30700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf55018375050003480030450221001dbd57101ad5ed9c6c36105ca8527d17eb3d41b2c73e0d94b7eb73cfd81371a502208f41f1c56933ee97e3fe57b4d0b6a5d6df20546bc92c8b980a7e26acdcfa2be6308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a100310005d6308205d206092a864886f70d010702a08205c3308205bf0201013100300b06092a864886f70d010701a08205a5308202e83082028ca003020102021060acc6d019e08fbf60d9223ba99c7d9a300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3137313231333038343033335a170d3332313231333038343033335a307d310b300906035504061302434e31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91310b300906035504080c02424a311930170603550405131035333032303030303030303032323762311b301906035504030c12e59bbde7bd91e8aea1e9878fe4b8ade5bf8331123010060a0992268993f22c6401010c0230343059301306072a8648ce3d020106082a811ccf5501822d0342000483b745b2ad9499d429f131f576ea579865a65959f3cc42a61b8c84ad0d95f613486f96fadb2fbc7c9fa6244ecb6b4e722be10b18117b7bd305795ad1479d645ea382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c301d0603551d0e0416041447daf0902970d0ac3a2ec5ba45c7c5e0f0047e9530700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300b0603551d0f0404030206c0300c06082a811ccf5501837505000348003045022009d475b8d261adb1c056131dc5b66d804167db0f3be10cc83752c476b2651ed9022100a826565597b96ca2d15f45ba4b0f9aba92d2a879dba85cb625b70d990a8f47ab308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a1003100dfe6";
        System.out.println(NumberConvert.toHexStrWithAddZero(23626749,4));
        System.out.println(string.getBytes().length);
       // System.out.println(new SecurityUnitFrame().format(string));
        System.out.println("Hex : " + new SecurityUnitFrameFormat(string.replaceAll(" ","").trim()).format());*/
    }

    private static String getTimeFromTaskData(String time) {
        String timeHex = time.substring(34,48);
        int y = Integer.parseInt(timeHex.substring(0,4),16);
        int m = Integer.parseInt(timeHex.substring(4,6),16);
        int d = Integer.parseInt(timeHex.substring(6,8),16);
        return String.format("%s-%s-%s 0:0:0",y,m,d);
    }

    private static void format() {
        String safeUnit = "00bbbb021711015401000000000d33000000000000000000ffffffff31675f6c0000000000000000000000000000000000000000000000000000530200000000227b7fff90ffec1f000000000000000000000101223ba99c7d9a3e0a35f809cac79da9db4305d9020da184ca0200803600ff00000000008510000000f00000000000000005e0308205dc06092a864886f70d010702a08205cd308205c90201013100300b06092a864886f70d010701a08205af308202f230820296a00302010202103e0a35f809cac79da9db4305d9020da1300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3133303530333032323134315a170d3238303530333032323134315a308186310b300906035504061302434e310b300906035504080c02424a31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91311930170603550405131057543336334d413031455730343030393124302206035504030c1be4b8ade59bbde794b5e58a9be7a791e5ada6e7a094e7a9b6e999a231123010060a0992268993f22c6401010c0230333059301306072a8648ce3d020106082a811ccf5501822d03420004f4ecdc07283d8c831294b1a403a5ba7d546853593c23cd1b1895ef63c1855ebb05e8bc7fda86e34e8ace8bcfd8038a14648e166f6e5869708aca57e7c3239effa382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300b0603551d0f0404030206c0301d0603551d0e041604146cdf5f91c11ad8858adbeb68a8fda1e3f040345c30700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf55018375050003480030450221001dbd57101ad5ed9c6c36105ca8527d17eb3d41b2c73e0d94b7eb73cfd81371a502208f41f1c56933ee97e3fe57b4d0b6a5d6df20546bc92c8b980a7e26acdcfa2be6308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a100310005d6308205d206092a864886f70d010702a08205c3308205bf0201013100300b06092a864886f70d010701a08205a5308202e83082028ca003020102021060acc6d019e08fbf60d9223ba99c7d9a300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d32301e170d3137313231333038343033335a170d3332313231333038343033335a307d310b300906035504061302434e31153013060355040a0c0ce59bbde5aeb6e794b5e7bd91310b300906035504080c02424a311930170603550405131035333032303030303030303032323762311b301906035504030c12e59bbde7bd91e8aea1e9878fe4b8ade5bf8331123010060a0992268993f22c6401010c0230343059301306072a8648ce3d020106082a811ccf5501822d0342000483b745b2ad9499d429f131f576ea579865a65959f3cc42a61b8c84ad0d95f613486f96fadb2fbc7c9fa6244ecb6b4e722be10b18117b7bd305795ad1479d645ea382012e3082012a3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c301d0603551d0e0416041447daf0902970d0ac3a2ec5ba45c7c5e0f0047e9530700603551d23046930678014828600620a37c464e2a7960f5049e1adbdf19417a13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d3282107bf7a0a8407611ae8e57a227990a66a5300b0603551d0f0404030206c0300c06082a811ccf5501837505000348003045022009d475b8d261adb1c056131dc5b66d804167db0f3be10cc83752c476b2651ed9022100a826565597b96ca2d15f45ba4b0f9aba92d2a879dba85cb625b70d990a8f47ab308202b530820259a00302010202107bf7a0a8407611ae8e57a227990a66a5300c06082a811ccf5501837505003039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d32301e170d3133303432323033323435305a170d3433303430383033323435305a3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f574f524b5f534d323059301306072a8648ce3d020106082a811ccf5501822d034200045a6308227b63235e62446e902741a8671be62ee6721ddaebc9b618c06b2eb92fb94f7f104bbdff9fea23bc3b0db3a281ff811d9a1202bf57e9a59ded9b35227fa382013f3082013b300f0603551d13040830060101ff02010330700603551d230469306780149afd8b64f22b53d39c45144a9629b5beb51ec45aa13da43b3039310d300b060355040a0c0445505249310d300b060355040b0c04455052493119301706035504030c10434120455052495f524f4f545f534d328210312b485ff76a97f50dc64251b6c1346c301d0603551d0e04160414828600620a37c464e2a7960f5049e1adbdf19417300b0603551d0f0404030201fe3081890603551d1f048181307f303da03ba0398637687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c2e63726c303ea03ca03a8638687474703a2f2f3231312e38382e32352e37373a393030302f6766612f63726c2f6766616170702e63726c2f534d322f63726c302e63726c300c06082a811ccf55018375050003480030450221009be3f87784a7274eb9477fb1ec9f06a1264714ea06320dbc9b0f04dd69804070022074d9024de6fc29ace33a2a54dca690a20ac5931bdfa746669bcb0d7e81de65d0a1003100";
        // System.out.println(new SecurityUnitFrame().format(safeUnit));
        byte[] bytes = safeUnit.getBytes();
        // getCammand_ResponseInfos(01,01);
        //System.out.println(new SecurityUnitFrame().format("e900050282016a805de6"));
        new Cammand(safeUnit, getDataUnits("安全单元状态字_1",
                "软件版本号_3",
                "硬件版本号_3",
                "C-ESAM序列号_8",
                "操作者代码_4",
                "权限_1",
                "权限掩码_8",
                "操作者信息_30",
                "Y-ESAM序列号_8",
                "Y-ESAM对称密钥密钥版本_16",
                "主站证书版本号_1",
                "终端证书版本号_1",
                "主站证书序列号_16",
                "终端证书序列号_16",
                "当前计数器_4",
                "转加密剩余次数_4",
                "标签密钥版本_8",
                "主站证书_-1",
                "终端证书_-1"));
    }

    public static String getCammand_ResponseInfos(int mainSignCode, int cammand_responseCode) {
        int main_cammand_response = (mainSignCode << 2) + cammand_responseCode;
        System.out.println(Integer.toBinaryString(main_cammand_response));
        return "";
    }

    public static DataUnit[] getDataUnits(String... dataUnitStrs) {
        if (dataUnitStrs == null) return null;
        int length = dataUnitStrs.length;
        if (length == 0) return null;
        DataUnit[] dataUnits = new DataUnit[length];
        for (int i = 0; i < length; i++) {
            String[] dataUnitArr = dataUnitStrs[i].split("_");
            dataUnits[i] = new DataUnit(Integer.parseInt(dataUnitArr[1], 16), dataUnitArr[0]);
        }
        return dataUnits;
    }


    private static String checkOrDefault(String address, String defValue, int serverAddressType) {
        String address_copy = address;
        String address_endCase = address.substring(address.length() - 1);
        if (address_endCase.equalsIgnoreCase("F")) {
            address = address.substring(0, address.length() - 1);
        }
        if (null == address || TextUtils.isEmpty(address)) {
            return defValue.toUpperCase();
        }
        if (serverAddressType == ADDRESS_TYPE_BROADCAST) {
            return "AA";
        }

        String regex = REGEX_SINGLE_GROUP;
        if (isSingleOrGroup(serverAddressType)) {
            regex = REGEX_SINGLE_GROUP;
        } else if (serverAddressType == ADDRESS_TYPE_MATCH) {
            regex = REGEX_MATCH;
        }
        address = address.matches(regex)
                ? address : defValue;
        address = address.length() % 2 == 0 ? address : address + "F";
        if (address_copy.equalsIgnoreCase(address)) {
            return address_copy;
        }
        return address;
    }

    private static boolean isSingleOrGroup(int serverAddressType) {
        return serverAddressType == ADDRESS_TYPE_SINGLE || serverAddressType == ADDRESS_TYPE_GROUP;
    }

}
